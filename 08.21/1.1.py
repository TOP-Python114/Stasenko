# СДЕЛАТЬ: мои комментарии не удалять — я удалю их сам при повторной проверке; итог проверки не удалять — я изменю его сам при повторной проверке


from random import choice

# 1)
suits = ['Бубны', 'Пики', 'Черви', 'Крести']

deck = []
iter_list = iter(deck)

for count in suits:
    for card in range(1, 14):
        deck.append([card, count])
        print(iter_list.__next__())
print()

# Я попробовал сделать через enumerate, но код был слишком громоздкий и не особо отличался от прошлого


# 2)
deck_shuffled = []
def deck_shuffle(cards):
    while cards:
        rand_card = choice(cards)

        # КОММЕНТАРИЙ: в этих двух строках вы работаете с объектами в глобальном пространстве имён, игнорируя переданный аргумент — зачем тогда вообще было его передавать?
        deck_shuffled.append(rand_card)
        deck.remove(rand_card)

        if len(deck_shuffled) == 52:
            # ИСПРАВИТЬ: это не генераторная функция, а обычная функция, вычисляющая весь список за раз — в генераторе нет ключевого слова return, но есть yield — пересмотрите ещё раз лекцию по генераторам или обращайтесь с предметными вопросами
            return deck_shuffled

random_set = deck_shuffle(deck)

# ИСПОЛЬЗОВАТЬ: имена i, j, k мы используем только для индексов
for card in random_set:
    print(card, end=' --> ')


# stdout:
# [1, 'Бубны']
# [2, 'Бубны']
# [3, 'Бубны']
# [4, 'Бубны']
# [5, 'Бубны']
# [6, 'Бубны']
# [7, 'Бубны']
# [8, 'Бубны']
# [9, 'Бубны']
# [10, 'Бубны']
# [11, 'Бубны']
# [12, 'Бубны']
# [13, 'Бубны']
# [1, 'Пики']
# [2, 'Пики']
# [3, 'Пики']
# [4, 'Пики']
# [5, 'Пики']
# [6, 'Пики']
# [7, 'Пики']
# [8, 'Пики']
# [9, 'Пики']
# [10, 'Пики']
# [11, 'Пики']
# [12, 'Пики']
# [13, 'Пики']
# [1, 'Черви']
# [2, 'Черви']
# [3, 'Черви']
# [4, 'Черви']
# [5, 'Черви']
# [6, 'Черви']
# [7, 'Черви']
# [8, 'Черви']
# [9, 'Черви']
# [10, 'Черви']
# [11, 'Черви']
# [12, 'Черви']
# [13, 'Черви']
# [1, 'Крести']
# [2, 'Крести']
# [3, 'Крести']
# [4, 'Крести']
# [5, 'Крести']
# [6, 'Крести']
# [7, 'Крести']
# [8, 'Крести']
# [9, 'Крести']
# [10, 'Крести']
# [11, 'Крести']
# [12, 'Крести']
# [13, 'Крести']

# [12, 'Крести'] --> [13, 'Пики'] --> [5, 'Пики'] --> [10, 'Крести'] --> [12, 'Пики'] --> [13, 'Черви'] --> [5, 'Крести'] --> [1, 'Черви'] --> [7, 'Бубны'] --> [6, 'Черви'] --> [11, 'Черви'] --> [13, 'Бубны'] --> [1, 'Бубны'] --> [6, 'Пики'] --> [6, 'Бубны'] --> [6, 'Крести'] --> [8, 'Бубны'] --> [4, 'Пики'] --> [13, 'Крести'] --> [3, 'Черви'] --> [11, 'Крести'] --> [3, 'Пики'] --> [3, 'Крести'] --> [7, 'Крести'] --> [1, 'Пики'] --> [8, 'Крести'] --> [7, 'Пики'] --> [11, 'Бубны'] --> [8, 'Пики'] --> [2, 'Пики'] --> [2, 'Черви'] --> [10, 'Черви'] --> [9, 'Черви'] --> [10, 'Пики'] --> [3, 'Бубны'] --> [12, 'Бубны'] --> [5, 'Бубны'] --> [10, 'Бубны'] --> [4, 'Черви'] --> [5, 'Черви'] --> [2, 'Крести'] --> [11, 'Пики'] --> [1, 'Крести'] --> [4, 'Бубны'] --> [9, 'Бубны'] --> [7, 'Черви'] --> [4, 'Крести'] --> [9, 'Крести'] --> [8, 'Черви'] --> [2, 'Бубны'] --> [9, 'Пики'] --> [12, 'Черви'] -->


# ИТОГ: всё ещё требуется доработка, но уже лучше — 4/6
